{"version":3,"sources":["app.js","environment.js","main.js","markdown-aurelia.js","markdown-redux.js","markdown.js","resources/index.js","/home/jim/Desktop/aurelia-redux/src/app.html","/home/jim/Desktop/aurelia-redux/src/styles.css","/home/jim/Desktop/aurelia-redux/src/markdown-aurelia.html","/home/jim/Desktop/aurelia-redux/src/markdown-redux.html","/home/jim/Desktop/aurelia-redux/src/markdown.html"],"names":["App","data","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MarkdownAurelia","html","rawChanged","newValue","MarkdownRedux","store","textUpdater","subscribe","update","bind","state","getState","raw","keyupHandler","dispatch","updateText","attached","TEXT_UPDATE","text","type","action","Markdown","pastCount","futureCount","present","past","length","future","undo","redo"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.data = 'Hello World!';\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import marked from 'marked';\nimport { bindable } from 'aurelia-framework';\n\nexport class MarkdownAurelia {\n  @bindable raw;\n  html = '';\n\n  rawChanged(newValue) {\n    this.html = marked(newValue);\n  }\n}\n","import marked from 'marked';\nimport { bindable } from 'aurelia-framework';\nimport { createStore } from 'redux';\n\nexport class MarkdownRedux {\n  @bindable raw;\n  html = '';\n  store = createStore(textUpdater);\n\n  constructor() {\n    this.store.subscribe(this.update.bind(this));\n  }\n\n  update() {\n    const state = this.store.getState();\n    this.html = state.html;\n    this.raw = state.raw;\n  }\n\n  keyupHandler(newValue) {\n    this.store.dispatch(updateText(newValue));\n  }\n\n  attached() {\n    this.keyupHandler(this.raw);\n  }\n}\n\nconst TEXT_UPDATE = 'UPDATE';\n\n// action creator\nconst updateText = (text) => {\n  return {\n    type: TEXT_UPDATE,\n    text\n  };\n};\n\n// reducer\nfunction textUpdater(state = { raw: '', html: '' }, action) {\n  switch (action.type) {\n  case TEXT_UPDATE:\n    return {\n      raw: action.text,\n      html: marked(action.text)\n    };\n  default:\n    return state;\n  }\n}\n","import marked from 'marked';\nimport { bindable } from 'aurelia-framework';\nimport { createStore } from 'redux';\nimport undoable from 'redux-undo';\nimport { ActionCreators } from 'redux-undo';\n\nexport class Markdown {\n  @bindable raw;\n  html = '';\n  store = createStore(undoable(textUpdater));\n  pastCount = 0;\n  futureCount = 0;\n\n  constructor() {\n    this.store.subscribe(this.update.bind(this));\n  }\n\n  update() {\n    const state = this.store.getState().present;\n    this.html = state.html;\n    this.raw = state.raw;\n    this.pastCount = this.store.getState().past.length;\n    this.futureCount = this.store.getState().future.length;\n  }\n\n  keyupHandler(newValue) {\n    this.store.dispatch(updateText(newValue));\n  }\n\n  undo() {\n    this.store.dispatch(ActionCreators.undo());\n  }\n\n  redo() {\n    this.store.dispatch(ActionCreators.redo());\n  }\n\n  attached() {\n    this.keyupHandler(this.raw);\n  }\n}\n\nconst TEXT_UPDATE = 'UPDATE';\n\n// action creator\nconst updateText = (text) => {\n  return {\n    type: TEXT_UPDATE,\n    text\n  };\n};\n\n// reducer\nfunction textUpdater(state = { raw: '', html: '' }, action) {\n  switch (action.type) {\n  case TEXT_UPDATE:\n    return {\n      raw: action.text,\n      html: marked(action.text)\n    };\n  default:\n    return state;\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null],"sourceRoot":"../src"}